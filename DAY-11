Flattening a Linked List


class Solution {
    // Function to flatten a linked list
    Node merge(Node l1,Node l2)
    {
        Node temp=new Node(-1);
        Node ans=temp;
        while(l1!=null&& l2!=null)
        {
            if(l1.data<l2.data)
            {
                temp.bottom=l1;
                l1=l1.bottom;
            }else
            {
                
                temp.bottom=l2;
                l2=l2.bottom;
                
            }
            temp=temp.bottom;
        }
        while(l1!=null)
        {
            temp.bottom=l1;
            l1=l1.bottom;
            temp=temp.bottom;
        }
        while(l2!=null)
        {
            temp.bottom=l2;
            l2=l2.bottom;
            temp=temp.bottom;
        }
        return ans.bottom;
    }
    Node flatten(Node root) {
        // code here
        if(root==null || root.next==null)
        {
            return root;
        }
        Node merged=flatten(root.next);
        return merge(root,merged);
        
        
    }
}
